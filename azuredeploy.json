{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "centralindia",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "simple-vm-linux",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmsize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v4",
      "metadata": {
        "description": "Backup data size."
      }
    },
    "dataDiskSize": {
      "type": "string",
      "defaultValue": "128",
      "metadata": {
        "description": "Data disk size."
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "VirtualNetwork",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "addressPrefixes": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix of the virtual network"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network"
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2016-datacenter-gensecond",
      "allowedValues": [
        "2019-datacenter-gensecond",
        "2016-datacenter-gensecond",
        "ol84-lvm-gen2"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched Gen2 image of this given Windows version."
      }
    },
    "companyAuthCode": {
      "type": "string",
      "metadata": {
        "description": "AuthCode from your Metallic account"
      }
    },
    "firstDisk":{
      "type": "array",
      "defaultValue": [
        {
                  "lun": 0,
                  "createOption": "attach",
                  "caching": "ReadOnly",
                  "managedDisk": {
                    "id": "[resourceId('Microsoft.Compute/disks', variables('diskname'))]"
                  }
                }
      ]
    },
    "secondDisk": {
      "type": "array",
      "defaultValue": [
        {
                  "lun": 1,
                  "createOption": "attach",
                  "caching": "ReadOnly",
                  "managedDisk": {
                    "id": "[resourceId('Microsoft.Compute/disks', variables('secDiskName'))]"
                  }
                }
      ]
    },
    "identity":{
      "type": "object",
      "defaultValue": {
        "type": "None"
      }
    }
  },
   "variables": {
     "vName" : "[parameters('vmName')]",
     "nicName": "[concat(parameters('vmName'), '-nic')]",
     "diskname": "[concat(parameters('vmName'), '_DataDisk_0')]",
     "secDiskName": "[concat(parameters('vmName'), '_DataDisk_1')]",
     "addressPrefixes": "[split(parameters('addressPrefixes'), ',')]",
     "ImageOffer":"[if(equals(parameters('OSVersion'), 'ol84-lvm-gen2'), 'Oracle-Linux', 'WindowsServer')]",
     "Publisher":"[if(equals(parameters('OSVersion'), 'ol84-lvm-gen2'), 'Oracle', 'MicrosoftWindowsServer')]",
     "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
     "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'Reader', parameters('vmName')))]",
     "customScriptForInstaller": "[if(equals(variables('ImageOffer'), 'WindowsServer'), 'https://turindownloadcenter.blob.core.windows.net/m053/installpackage.ps1', 'https://ossindiaaccount.blob.core.windows.net/shellscript/AzueLinuxDeploy.sh')]",
     "backupgatewayPackage": "[if(equals(variables('ImageOffer'), 'WindowsServer'), 'https://turindownloadcenter.blob.core.windows.net/m053/AzureDBServer64.exe', 'https://sredownloadcenter.blob.core.windows.net/m050/LinuxCloudBackupGateway64.tar')]",
     "scriptPublisher": "[if(equals(variables('ImageOffer'), 'WindowsServer'), 'Microsoft.Compute', 'Microsoft.Azure.Extensions')]",
     "scriptType":"[if(equals(variables('ImageOffer'), 'WindowsServer'), 'CustomScriptExtension', 'CustomScript')]",
     "typeHandleVersion":"[if(equals(variables('ImageOffer'), 'WindowsServer'), '1.7', '2.1')]",
     "windowsCommandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File installpackage.ps1 -packagedownloaduri ',variables('backupgatewayPackage'),' -companyauthcode ', parameters('companyAuthCode'))]",
     "linuxCommandToExecute": "[concat('chmod 0777 AzueLinuxDeploy.sh && sudo dos2unix AzueLinuxDeploy.sh && sudo ./AzueLinuxDeploy.sh ',variables('backupgatewayPackage'), ' ',parameters('companyAuthCode'),' >> linuxBkpGateway.log 2>&1')]",     
     "dataDisks": "[if(equals(variables('ImageOffer'), 'Oracle-Linux'), concat(parameters('firstDisk'), parameters('secondDisk')), parameters('firstDisk'))]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[variables('addressPrefixes')]"
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "condition": "[equals(variables('ImageOffer'), 'WindowsServer')]",
      "name": "[variables('diskname')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "properties": {
        "diskSizeGB": "[int(parameters('dataDiskSize'))]",
        "creationData": {
          "createOption": "empty"
        }
      },
      "sku": {
        "name": "Premium_LRS"
      }
    },
    {
      "condition": "[equals(variables('ImageOffer'), 'Oracle-Linux')]",
      "name": "[variables('diskname')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "properties": {
        "diskSizeGB": "[int(50)]",
        "creationData": {
          "createOption": "empty"
        }
      },
      "sku": {
        "name": "Premium_LRS"
      }
    },
    {
      "condition": "[equals(variables('ImageOffer'), 'Oracle-Linux')]",
      "name": "[variables('secDiskName')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-12-01",
      "location": "[parameters('location')]",
      "properties": {
        "diskSizeGB": "[int(105)]",
        "creationData": {
          "createOption": "empty"
        }
      },
      "sku": {
        "name": "Premium_LRS"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "identity": "[if(not(equals(parameters('identity').type, 'None')), parameters('identity') , json('null'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmsize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('Publisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": "[variables('dataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Compute/disks', variables('diskname'))]"
      ]
    },
    {
      "condition": "[equals(parameters('identity').type, 'SystemAssigned')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('bootstrapRoleAssignmentId')]",
      "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/',variables('vName'))]"
      ],
      "properties": {
          "roleDefinitionId": "[variables('Reader')]",
          "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('vName')), '2021-03-01', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
      }
    },
    {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "apiVersion": "2021-04-01",
    "name": "[concat(variables('vName'),'/', 'BackupGateway')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Compute/virtualMachines/',variables('vName'))]"
    ],
    "properties": {
      "protectedSettings": {},
      "publisher": "[variables('scriptPublisher')]",
      "type": "[variables('scriptType')]",
      "typeHandlerVersion": "[variables('typeHandleVersion')]",
      "autoUpgradeMinorVersion": true,
      "settings": {
        "fileUris": [
          "[variables('customScriptForInstaller')]"
        ],
        "commandToExecute": "[if(equals(variables('ImageOffer'), 'WindowsServer'), variables('windowsCommandToExecute'), variables('linuxCommandToExecute'))]"
      }
    }
}
  ],
  "outputs": {
    "privateIpAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
    },
    "metallicGatewayClientName":{
      "type": "string",
      "value": "[concat(parameters('vmName'), '-', reference(resourceId('Microsoft.Compute/virtualMachines', variables('vName'))).vmId)]"
    },
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    }
  }
}